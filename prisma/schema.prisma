// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash String

  firstname String?// é uma opção se quer colocar ou não
  lastname String? //é uma opção se quer colocar ou não

  @@map("users")// para mapear nomes de tabelas e colunas no banco de dados para nomes diferentes no modelo do Prisma.
  bookmarks BookMark[]
}
 
 model BookMark{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  description String?//opcional
  link String

  userID Int//Este é um campo em um modelo que armazena uma chave estrangeira que referencia o ID 
  //de um usuário. Este campo é usado para estabelecer uma relação entre este modelo e o modelo User.

  user User @relation(fields: [userID],references: [id])
  //define a relação entre o modelo atual e o modelo User. O @relation é usado para especificar que o campo userID neste modelo é uma chave estrangeira 
  //que referencia o campo id no modelo User

  @@map("bookmarks")// para mapear nomes de tabelas e colunas no banco de dados para nomes diferentes no modelo do Prisma.
 }
